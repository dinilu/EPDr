% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EPDr-get_functions.R
\name{get_geochron}
\alias{get_geochron}
\alias{.get_geochron}
\alias{.get_aar}
\alias{.get_c14}
\alias{.get_esr}
\alias{.get_ft}
\alias{.get_kar}
\alias{.get_pb210}
\alias{.get_si32}
\alias{.get_tl}
\alias{.get_useries}
\title{Retrieving geochronological information for an entity in the EPD}
\usage{
get_geochron(e_, connection)

.get_geochron(e_, connection)

.get_aar(e_, connection)

.get_c14(e_, connection)

.get_esr(e_, connection)

.get_ft(e_, connection)

.get_kar(e_, connection)

.get_pb210(e_, connection)

.get_si32(e_, connection)

.get_tl(e_, connection)

.get_useries(e_, connection)
}
\arguments{
\item{e_}{numeric. Value indicating the entity number (e_) of the 
database that is queried.}

\item{connection}{PostgreSQLConnection. Object of class 
\code{PostgreSQLConnection} as returned by function 
\code{\link[EPDr]{connect_to_epd}}.}
}
\value{
Data frame with all information from specific tables in the EPD 
(see documentation of the EPD: 
\url{http://www.europeanpollendatabase.net/data/downloads/image/pollen-database-manual-20071011.doc}) for the requested entity. Columns names in the resulting 
data frames will vary among functions.
}
\description{
Functions in this group retrieve different sort of geochronological 
information from an specific entity in the database.
}
\details{
All functions here are designed to retrieve information from a single 
entity. If multiple entity numbers are requested, the functions return 
data only for the first one. Each function retrieve data from a specific 
table or set of tables that are conveniently combined if necessary.
}
\section{get_geochron}{

This function returns a \code{\link[EPDr]{geochron}} object, that store 
information from different tables for a particular entity.
}

\section{.get_geochron}{

This functions returns a data.frame with information in in the GEOCHRON table for the 
specified entity. This corresponds with the common geochronological 
data for the entity that have been analysed for that particular entity.
}

\section{.get_aar}{

This functions returns a data.frame with information in in the AAR table for the specified 
entity. This corresponds with Amino Acid Racemization data for datation 
samples.
}

\section{.get_c14}{

This functions returns a data.frame with information in in the C14 table for the specified 
entity. This corresponds with C14 data for all radiocarbon samples that 
have been analysed for that particular entity.
}

\section{.get_esr}{

This functions returns a data.frame with information in in the ESR table for the specified 
entity. This corresponds with Electron Spin Resonance data for datation 
samples.
}

\section{.get_ft}{

This functions returns a data.frame with information in in the FT table for the specified 
entity. This corresponds with Fission Track data for datation samples.
}

\section{.get_kar}{

This functions returns a data.frame with information in in the KAR table for the specified 
entity. This corresponds with Fission Track data for datation samples.
}

\section{.get_pb210}{

This functions returns a data.frame with information in in the PB210 table for the specified 
entity. This corresponds with \eqn{^{210}Pb}{^[210]Pb} isotope data for 
datation samples.
}

\section{.get_si32}{

This functions returns a data.frame with information in in the SI32 table for the specified 
entity. This corresponds with \eqn{^{32}Si}{^[32]Si} (Silicon-32) data for datation samples.
}

\section{.get_tl}{

This functions returns a data.frame with information in in the TL table for the specified 
entity. This corresponds with Thermoluminescence data for datation 
samples.
}

\section{.get_useries}{

This functions returns a data.frame with information in in the USERIES table for the specified
entity. This corresponds with Uranium-series data for datation samples.
}

\examples{
# Not run
# epd.connection <- connect_to_epd(database = "epd", user = "epdr",
#                                 password = "epdrpw", host = "localhost")
# .get_c14(1, epd.connection)
# .get_c14(400, epd.connection)
#
# get_geochron(400, epd.connection)

}
