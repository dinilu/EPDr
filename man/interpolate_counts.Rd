% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EPDr-standardize_methods.R
\docType{methods}
\name{interpolate_counts}
\alias{interpolate_counts}
\alias{interpolate_counts,epd.entity.df,numeric-method}
\alias{interpolate_counts,epd.entity,numeric-method}
\title{Interpolate counts to specific time periods}
\usage{
interpolate_counts(x, time, ..., chronology = NULL, method = c("linear",
  "loess", "sspline"), rep_negt = TRUE, span = 0.25, df = min(20,
  nrow(x@commdf@counts) * 0.7))

\S4method{interpolate_counts}{epd.entity.df,numeric}(x, time, ...,
  chronology = NULL, method = c("linear", "loess", "sspline"),
  rep_negt = TRUE, span = 0.25, df = min(20, nrow(x@commdf@counts) * 0.7))

\S4method{interpolate_counts}{epd.entity,numeric}(x, time, ...,
  chronology = NULL, method = c("linear", "loess", "sspline"),
  rep_negt = TRUE, span = 0.25, df = min(20, nrow(x@commdf@counts) * 0.7))
}
\arguments{
\item{x}{epd.entity.df An \code{\link[EPDr]{epd.entity.df}} or
\code{\link[EPDr]{epd.entity}} object as returned by
\code{\link[EPDr]{get_entity}} or
\code{\link[EPDr]{entity_to_matrices}} functions.}

\item{time}{numeric Vector with time periods, in the same system 
(i.e., cal BP) than "ages" in epd.entity.df, in which counts have 
to be estimated.}

\item{...}{additional arguments to loess, smooth.spline and aspline.}

\item{chronology}{numeric Number specifying the chronology from 
which ages should be used to calculate the interpolations. If none is
provided the function uses the default chronology from the object (see
\code{\link[EPDr]{giesecke_default_chron}} or
\code{\link[EPDr]{check_default_chron}}).}

\item{method}{character Interpolation method, should be an unambiguous 
abbreviation of either linear, loess, or sspline. See Details section.}

\item{rep_negt}{logical logical to indicate whether or not to replace 
negative values with zero in the interpolated data.}

\item{span}{numeric Span for loess, default = 0.25.}

\item{df}{numeric Degress of freedome for smoothing spline, default is 
the lower of 20 or 0.7 * number of samples.}
}
\value{
The function returns an \code{\link[EPDr]{epd.entity.df}} object,
similar to \code{x} in which ages and counts has been modified to the
time periods specified in time and the counts estimated for these periods.
}
\description{
This function uses data (sample ages and sample counts) from an
\code{\link[EPDr]{epd.entity.df}} object to estimate by linear 
interpolation, loess or smooth splines the counts at specific time 
periods defined by the user. This can be used to estimate counts for 
the same time periods for multiple entities in the database, 
standardizing them for integrative analysis.
}
\details{
Data for time periods in \code{time} but not recorded in the 
entity are fill with \code{NA}. This is convenient if analysis are 
carried out with multiple entities.

Interpolation can be done using linear interpolation between 
data points in the original series (default) using 
\code{\link[stats:approx]{approx}}, using a fitted 
\code{\link[stats:loess]{loess}} locally weighted regression, or by 
\code{\link[stats:smooth.spline]{smooth.spline}}. The latter two methods 
will also smooth the data and additional arguments may be passed to 
these functions to control the amount of smoothing, or to force replacing
negative values with zeros.
}
\examples{
# epd.connection <- connect_to_epd(host="localhost", database="epd",
#                                  user="epdr", password="epdrpw")
# t <- c(seq(0, 21000, by = 500))
# epd.1 <- get_entity(1, epd.connection)
# epd.1.int <- interpolate_counts(epd.1, t)
#
# epd.3 <- get_entity(3, epd.connection)
# epd.3.int <- interpolate_counts(epd.3, t, method="linear")
# epd.3.int <- interpolate_counts(epd.3, t, method="loess")
# epd.3.int <- interpolate_counts(epd.3, t, method="sspline")
}
