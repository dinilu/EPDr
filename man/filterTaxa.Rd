% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EPDr-standardize_functions.R
\name{filterTaxa}
\alias{filterTaxa}
\title{Expand EPDr objects with new taxa}
\usage{
filterTaxa(counts, taxa_list, epd_taxonomy)
}
\arguments{
\item{counts}{\code{\link[EPDr:agedcounts]{agedcounts}} or
\code{\link[EPDr:counts]{counts}} objects to be modified.}

\item{taxa_list}{Character vector indicating the new taxa in the \code{@counts} slot.}

\item{epd_taxonomy}{Data frame with the taxonomy from the EPD as from the
\code{\link[EPDr:getTaxonomyEPD]{getTaxonomyEPD}} function.}
}
\value{
\code{\link[EPDr:agedcounts]{agedcounts}} or
\code{\link[EPDr:counts]{counts}} objects with the modified \code{@counts} slot.
}
\description{
This functions modifies EPDr objects with \code{@counts} slot
(\code{\link[EPDr:agedcounts]{agedcounts}} or \code{\link[EPDr:counts]{counts}})
to filter taxa columns to match \code{taxa_list}. The function add empty columns
(\code{NA}) if a new taxa is defined int \code{taxa_list} or remove columns for the 
taxa not included in \code{taxa_list}. The function may look useless for a single 
entity but it is useful when standardizing data from multiple entities.
}
\examples{
# epd.connection <- connectToEPD(host="localhost", database="epd",
# user="epdr", password="epdrpw")
# agedcounts.1 <- getAgedCounts(1, epd.connection)
# agedcounts.1@counts@taxa_names
# colnames(agedcounts.1@counts@counts)
# agedcounts.1.ft <- filterTaxa(agedcounts.1,
# c(agedcounts.1@counts@taxa_names, "prueba"), getTaxonomyEPD(epd.connection))
# colnames(agedcounts.1.ft@counts@counts)
# agedcounts.1.ft@counts@taxa_names
# head(agedcounts.1.ft@counts@counts)

}

