q()
library(paleoCLMs)
q()
load("E:/00-PaleoCLM/03-PooledNiche/.RData")
str(pollen[[1]])
colnames(pollen[[1]])
library(lefse)
?lefse
??lefse
?princomp
pca
?prcomp
load("~/Cursos-Seminarios-ActividadesDivulgaci√≥n/20150713-R_Course-AEET/MaterialCurso/Day4/Day4.1.R")
library(picante)
libary(phytools)
library(picante)
library(picante)
library(betapart)
??betapart
"betapart"
traits.test <- cbind(c(1,1,1,2,2,3,3,4,4,5,5), c(1,2,4,1,2,3,5,1,4,3,5))
dimnames(traits.test) <- list(paste("sp", 1:11, sep=""), c("Trait 1", "Trait 2"))
traits.test
comm.test <- matrix(0,4,11,dimnames=list(c("A","B","C","D"), paste("sp",1:11,sep="")))
comm.test
comm.test["A",c(1,2,4,5)]<-1
comm.test["B",c(1,3,8,9)]<-1
comm.test["C",c(6,7,10,11)]<-1
comm.test["D",c(2,4,7,9)]<-1
comm.test
plot(5,5,xlim=c(0,6), ylim=c(0,6), type="n", xlab="Trait 1",ylab="Trait 2")
points(traits.test[,1],traits.test[,2], pch=21,cex=1.5,bg="black")
rect(1,1,4,4, col="#458B0050", border="#458B00") ; text(2.5,2.5,"B",col="#458B00",cex=1.5)
polygon(c(2,1,3,4), c(1,2,5,4), col="#DA70D650", border="#DA70D6") ;
text(2.5,3,"D",col="#DA70D6",cex=1.5)
rect(1,1,2,2, col="#FF000050" , border="#FF0000") ; text(1.5,1.5,"A",col="#FF0000",cex=1.5)
rect(3,3,5,5, col="#1E90FF50", border="#1E90FF") ; text(4,4.2,"C",col="#1E90FF",cex=1.5)
test.multi <- functional.beta.multi(x=comm.test, traits=traits.test, index.family = "jaccard" )
test.multi
test.multi.1 <- functional.beta.multi(x=comm.test, traits=traits.test, index.family = "jaccard" )
test.multi.1
test.multi.2 <- functional.beta.multi(x=comm.test, traits=traits.test, index.family = "jaccard" )
test.multi.2
test.multi.2 <- functional.beta.multi(x=comm.test[-1,], traits=traits.test, index.family = "jaccard" )
test.multi.2
test.multi <- functional.beta.multi(x=comm.test, traits=traits.test, index.family = "jaccard" )
test.multi
test.multi.1 <- functional.beta.multi(x=comm.test[-1,], traits=traits.test, index.family = "jaccard" )
test.multi.1
test.multi.2 <- functional.beta.multi(x=comm.test[-2,], traits=traits.test, index.family = "jaccard" )
test.multi.2
test.multi.3 <- functional.beta.multi(x=comm.test[-3,], traits=traits.test, index.family = "jaccard" )
test.multi.3
test.multi.4 <- functional.beta.multi(x=comm.test[-4,], traits=traits.test, index.family = "jaccard" )
test.multi.4
partial.1 <- test.multi - test.multi.1
class(test.multi)
partial.1 <- unlist(test.multi) - unlist(test.multi.1)
partial.1
partial.1 <- unlist(test.multi) - unlist(test.multi.1)
partial.2 <- unlist(test.multi) - unlist(test.multi.2)
partial.3 <- unlist(test.multi) - unlist(test.multi.3)
partial.4 <- unlist(test.multi) - unlist(test.multi.4)
partial.1
partial.2
partial.3
partial.3
partial.4
partial.1
clean
partial.1
partial.2
partial.3
partial.4
View(comm.test)
View(comm.test)
partial.1 <- unlist(test.multi) / unlist(test.multi.1)
partial.2 <- unlist(test.multi) / unlist(test.multi.2)
partial.3 <- unlist(test.multi) / unlist(test.multi.3)
partial.4 <- unlist(test.multi) / unlist(test.multi.4)
partial.1
partial.2
partial.3
partial.4
test.multi.1 <- functional.beta.multi(x=comm.test[,-1], traits=traits.test, index.family = "jaccard" )
comm.test
traits.test
test.multi.1 <- functional.beta.multi(x=comm.test[,-1], traits=traits.test[-1,], index.family = "jaccard" )
test.multi.1
test.multi.2 <- functional.beta.multi(x=comm.test[,-2], traits=traits.test[-2,], index.family = "jaccard" )
test.multi.2
test.multi.3 <- functional.beta.multi(x=comm.test[,-3], traits=traits.test[-3,], index.family = "jaccard" )
test.multi.3
test.multi.4 <- functional.beta.multi(x=comm.test[,-4], traits=traits.test[-4,], index.family = "jaccard" )
test.multi.4
partial.1 <- unlist(test.multi) / unlist(test.multi.1)
partial.2 <- unlist(test.multi) / unlist(test.multi.2)
partial.3 <- unlist(test.multi) / unlist(test.multi.3)
partial.4 <- unlist(test.multi) / unlist(test.multi.4)
partial.1
partial.2
partial.3
partial.4
traits.test<-cbind( c(1,1,1,2,2,3,3,4,4,5,5) , c(1,2,4,1,2,3,5,1,4,3,5) )
dimnames(traits.test)<-list(paste("sp",1:11,sep="") , c("Trait 1","Trait 2") )
comm.test<-matrix(0,4,11,dimnames=list( c("A","B","C","D") , paste("sp",1:11,sep="") ) )
comm.test["A",c(1,2,4,5)]<-1
comm.test["B",c(1,3,8,9)]<-1
comm.test["C",c(6,7,10,11)]<-1
comm.test["D",c(2,4,7,9)]<-1
plot(5,5,xlim=c(0,6), ylim=c(0,6), type="n", xlab="Trait 1",ylab="Trait 2")
points(traits.test[,1],traits.test[,2], pch=21,cex=1.5,bg="black")
rect(1,1,4,4, col="#458B0050", border="#458B00") ; text(2.5,2.5,"B",col="#458B00",cex=1.5)
polygon(c(2,1,3,4), c(1,2,5,4), col="#DA70D650", border="#DA70D6") ;
text(2.5,3,"D",col="#DA70D6",cex=1.5)
rect(1,1,2,2, col="#FF000050" , border="#FF0000") ; text(1.5,1.5,"A",col="#FF0000",cex=1.5)
rect(3,3,5,5, col="#1E90FF50", border="#1E90FF") ; text(4,4.2,"C",col="#1E90FF",cex=1.5)
test.pair<-functional.beta.pair(x=comm.test, traits=traits.test, index.family = "jaccard" )
lapply(test.pair,round,2)
rm(list=ls())
##### 4 communities in a 2D functional space (convex hulls are rectangles)
traits.test <- cbind(c(1,1,1,2,2,3,3,4,4,5,5), c(1,2,4,1,2,3,5,1,4,3,5))
dimnames(traits.test) <- list(paste("sp", 1:11, sep=""), c("Trait 1", "Trait 2"))
comm.test <- matrix(0,4,11,dimnames=list(c("A","B","C","D"), paste("sp",1:11,sep="")))
comm.test["A",c(1,2,4,5)]<-1
comm.test["B",c(1,3,8,9)]<-1
comm.test["C",c(6,7,10,11)]<-1
comm.test["D",c(2,4,7,9)]<-1
plot(5,5,xlim=c(0,6), ylim=c(0,6), type="n", xlab="Trait 1",ylab="Trait 2")
points(traits.test[,1],traits.test[,2], pch=21,cex=1.5,bg="black")
rect(1,1,4,4, col="#458B0050", border="#458B00") ; text(2.5,2.5,"B",col="#458B00",cex=1.5)
polygon(c(2,1,3,4), c(1,2,5,4), col="#DA70D650", border="#DA70D6") ;
text(2.5,3,"D",col="#DA70D6",cex=1.5)
rect(1,1,2,2, col="#FF000050" , border="#FF0000") ; text(1.5,1.5,"A",col="#FF0000",cex=1.5)
rect(3,3,5,5, col="#1E90FF50", border="#1E90FF") ; text(4,4.2,"C",col="#1E90FF",cex=1.5)
test.multi <- functional.beta.multi(x=comm.test, traits=traits.test, index.family = "jaccard" )
test.multi
test.multi.1 <- functional.beta.multi(x=comm.test[,-1], traits=traits.test[-1,], index.family = "jaccard" )
test.multi.1
test.multi.2 <- functional.beta.multi(x=comm.test[,-2], traits=traits.test[-2,], index.family = "jaccard" )
test.multi.2
test.multi.3 <- functional.beta.multi(x=comm.test[,-3], traits=traits.test[-3,], index.family = "jaccard" )
test.multi.3
test.multi.4 <- functional.beta.multi(x=comm.test[,-4], traits=traits.test[-4,], index.family = "jaccard" )
test.multi.4
partial.1 <- unlist(test.multi) / unlist(test.multi.1)
partial.2 <- unlist(test.multi) / unlist(test.multi.2)
partial.3 <- unlist(test.multi) / unlist(test.multi.3)
partial.4 <- unlist(test.multi) / unlist(test.multi.4)
partial.1
partial.2
partial.3
partial.4
partial.si1 <- (unlist(test.multi) - unlist(test.multi.si1)) / unlist(test.multi)
partial.si2 <- (unlist(test.multi) - unlist(test.multi.si2)) / unlist(test.multi)
partial.si3 <- (unlist(test.multi) - unlist(test.multi.si3)) / unlist(test.multi)
partial.si4 <- (unlist(test.multi) - unlist(test.multi.si4)) / unlist(test.multi)
test.multi.si1 <- functional.beta.multi(x=comm.test[-1,], traits=traits.test, index.family = "jaccard" )
test.multi.si1
test.multi.si2 <- functional.beta.multi(x=comm.test[-2,], traits=traits.test, index.family = "jaccard" )
test.multi.si2
test.multi.si3 <- functional.beta.multi(x=comm.test[-3,], traits=traits.test, index.family = "jaccard" )
test.multi.si3
test.multi.si4 <- functional.beta.multi(x=comm.test[-4,], traits=traits.test, index.family = "jaccard" )
test.multi.si4
partial.si1 <- (unlist(test.multi) - unlist(test.multi.si1)) / unlist(test.multi)
partial.si2 <- (unlist(test.multi) - unlist(test.multi.si2)) / unlist(test.multi)
partial.si3 <- (unlist(test.multi) - unlist(test.multi.si3)) / unlist(test.multi)
partial.si4 <- (unlist(test.multi) - unlist(test.multi.si4)) / unlist(test.multi)
partial.1
partial.2
partial.3
partial.4
unlist(test.multi)
unlist(test.multi.si1)
unlist(test.multi.si2)
unlist(test.multi.si3)
unlist(test.multi.si4)
partial.si1
partial.si2
partial.si3
partial.si4
partial.si1 <- (unlist(test.multi) - unlist(test.multi.si1)) / unlist(test.multi.si1)
partial.si2 <- (unlist(test.multi) - unlist(test.multi.si2)) / unlist(test.multi.si2)
partial.si3 <- (unlist(test.multi) - unlist(test.multi.si3)) / unlist(test.multi.si3)
partial.si4 <- (unlist(test.multi) - unlist(test.multi.si4)) / unlist(test.multi.si4)
partial.si1
partial.si2
partial.si3
partial.si4
partial.si1 <- (unlist(test.multi) - unlist(test.multi.si1)) / unlist(test.multi)
partial.si2 <- (unlist(test.multi) - unlist(test.multi.si2)) / unlist(test.multi)
partial.si3 <- (unlist(test.multi) - unlist(test.multi.si3)) / unlist(test.multi)
partial.si4 <- (unlist(test.multi) - unlist(test.multi.si4)) / unlist(test.multi)
partial.si1
partial.si2
partial.si3
partial.si4
partial.sp1 <- (unlist(test.multi) - unlist(test.multi.sp1)) / unlist(test.multi)
partial.sp2 <- (unlist(test.multi) - unlist(test.multi.sp2)) / unlist(test.multi)
test.multi.sp1 <- functional.beta.multi(x=comm.test[,-1], traits=traits.test[-1,], index.family = "jaccard" )
test.multi.sp1
test.multi.sp2 <- functional.beta.multi(x=comm.test[,-2], traits=traits.test[-2,], index.family = "jaccard" )
test.multi.sp2
test.multi.sp3 <- functional.beta.multi(x=comm.test[,-3], traits=traits.test[-3,], index.family = "jaccard" )
test.multi.sp3
test.multi.sp4 <- functional.beta.multi(x=comm.test[,-4], traits=traits.test[-4,], index.family = "jaccard" )
test.multi.sp4
partial.sp1 <- (unlist(test.multi) - unlist(test.multi.sp1)) / unlist(test.multi)
partial.sp2 <- (unlist(test.multi) - unlist(test.multi.sp2)) / unlist(test.multi)
partial.sp3 <- (unlist(test.multi) - unlist(test.multi.sp3)) / unlist(test.multi)
partial.sp4 <- (unlist(test.multi) - unlist(test.multi.sp4)) / unlist(test.multi)
partial.sp1
partial.sp2
partial.sp3
partial.sp4
traits.test[1,]
text(c(traits.test[1,]), "sp1")
c(traits.test[1,])
plot(5,5,xlim=c(0,6), ylim=c(0,6), type="n", xlab="Trait 1",ylab="Trait 2")
points(traits.test[,1],traits.test[,2], pch=21,cex=1.5,bg="black")
rect(1,1,4,4, col="#458B0050", border="#458B00") ; text(2.5,2.5,"B",col="#458B00",cex=1.5)
polygon(c(2,1,3,4), c(1,2,5,4), col="#DA70D650", border="#DA70D6") ;
text(2.5,3,"D",col="#DA70D6",cex=1.5)
rect(1,1,2,2, col="#FF000050" , border="#FF0000") ; text(1.5,1.5,"A",col="#FF0000",cex=1.5)
rect(3,3,5,5, col="#1E90FF50", border="#1E90FF") ; text(4,4.2,"C",col="#1E90FF",cex=1.5)
text(traits.test[1,], "sp1")
plot(5,5,xlim=c(0,6), ylim=c(0,6), type="n", xlab="Trait 1",ylab="Trait 2")
points(traits.test[,1],traits.test[,2], pch=21,cex=1.5,bg="black")
rect(1,1,4,4, col="#458B0050", border="#458B00") ; text(2.5,2.5,"B",col="#458B00",cex=1.5)
text(2.5,3,"D",col="#DA70D6",cex=1.5)
polygon(c(2,1,3,4), c(1,2,5,4), col="#DA70D650", border="#DA70D6") ;
rect(1,1,2,2, col="#FF000050" , border="#FF0000") ; text(1.5,1.5,"A",col="#FF0000",cex=1.5)
rect(3,3,5,5, col="#1E90FF50", border="#1E90FF") ; text(4,4.2,"C",col="#1E90FF",cex=1.5)
text(traits.test[1,1], traits.test[1,2], "sp1")
text(traits.test[2,1], traits.test[2,2], "sp2")
text(traits.test[3,1], traits.test[3,2], "sp3")
text(traits.test[4,1], traits.test[4,2], "sp4")
partial.sp1 #
partial.sp2
partial.sp3
partial.sp4
test.multi.sp5 <- functional.beta.multi(x=comm.test[,-5], traits=traits.test[-5,], index.family = "jaccard" )
test.multi.sp5
partial.sp5 <- (unlist(test.multi) - unlist(test.multi.sp5)) / unlist(test.multi)
partial.sp5 #
text(traits.test[5,1], traits.test[5,2], "sp4")
text(traits.test[5,1], traits.test[5,2], "sp5")
text(traits.test[11,1], traits.test[11,2], "sp11")
test.multi.sp11 <- functional.beta.multi(x=comm.test[,-11], traits=traits.test[-11,], index.family = "jaccard" )
test.multi.sp11
partial.sp11 <- (unlist(test.multi) - unlist(test.multi.sp11)) / unlist(test.multi)
partial.sp11
library(procrustes)
install.packages("procrustres")
install.packages("procrustes")
library(vegan)
?procrustes
q()
readline("password:")
pw <- readline("password:")
pw
library(spdep)
#1. Small distance
n1 <- dnearneigh(as.matrix(mC.work[,c("x","y")]), d1=0, d2=10, longlat=T)
w1 <- nb2listw(n1, style="S", zero.policy=T)
#2. Medium distance
n2 <- dnearneigh(as.matrix(mC.work[,c("x","y")]), d1=0, d2=25, longlat=T)
w2 <- nb2listw(n2, style="S", zero.policy=T)
#2. Large distance
n3 <- dnearneigh(as.matrix(mC.work[,c("x","y")]), d1=0, d2=50, longlat=T)
w3 <- nb2listw(n3, style="S", zero.policy=T)
plot(mC.work[,c("x","y")], axes=F, xlab="", ylab="")
plot(w1, mC.work[,c("x","y")])
plot(w2, mC.work[,c("x","y")])
plot(w3, mC.work[,c("x","y")])
n1 <- dnearneigh(as.matrix(mC.work[,c("x","y")]), d1=0, d2=10, longlat=T)
q()
setwd("~/Proyectos/EPD/EPDr/R")
